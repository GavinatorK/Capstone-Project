)
)
fillColors = RColorBrewer::brewer.pal(ncuts, pal)
d$set(
scope = map,
fills = as.list(setNames(fillColors, levels(data$fillKey))),
legend = legend,
labels = labels,
...
)
if (!is.null(animate)){
range_ = summary(data[[animate]])
data = dlply(data, animate, function(x){
y = toJSONArray2(x, json = F)
names(y) = lapply(y, '[[', fml$right.name)
return(y)
})
d$set(
bodyattrs = "ng-app ng-controller='rChartsCtrl'"
)
d$addAssets(
jshead = "http://cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.1/angular.min.js"
)
if (play == T){
d$setTemplate(chartDiv = sprintf("
<div class='container'>
<button ng-click='animateMap()'>Play</button>
<div id='{{chartId}}' class='rChart datamaps'></div>
</div>
<script>
function rChartsCtrl($scope, $timeout){
$scope.year = %s;
$scope.animateMap = function(){
if ($scope.year > %s){
return;
}
map{{chartId}}.updateChoropleth(chartParams.newData[$scope.year]);
$scope.year += 1
$timeout($scope.animateMap, 1000)
}
}
</script>", range_[1], range_[6])
)
} else {
d$setTemplate(chartDiv = sprintf("
<div class='container'>
<select ng-model='year' ng-options=%s></select>
<span ng-bind='year'></span>
<div id='{{chartId}}' class='rChart datamaps'></div>
</div>
<script>
function rChartsCtrl($scope){
$scope.year = %s;
$scope.$watch('year', function(newYear){
map{{chartId}}.updateChoropleth(chartParams.newData[newYear]);
})
}
</script>", range_[1], range_[6], range_[1])
)
}
d$set(newData = data, data = data[[1]])
} else {
d$set(data = dlply(data, fml$right.name))
}
return(d)
}
ichoropleth2(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth2(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
head(datm2)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
head(datm2)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
getwd()
dat=read.csv('DataonChildhealth/totalbystate2.csv')
ichoropleth(IDNUMR ~ STATE,
data = dat[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
head(dat)
dat$Year=2006
dat<-dat[c('Year','STATE', 'IDNUMR')]
head(dat)
ichoropleth(IDNUMR ~ STATE,
data = dat[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
datm2 <- transform(datm,
StateChoropleth = state.abb[match(as.character(STATE), state.name)],
fillKey = cut(STATE, quantile(Crime, seq(0, 1, 1/5)), labels = LETTERS[1:5])
)
datm2 <- transform(datm,
STATE=Choropleth = state.abb[match(as.character(STATE), state.name)],
fillKey = cut(STATE, quantile(Crime, seq(0, 1, 1/5)), labels = LETTERS[1:5])
datm2 <- transform(datm,
STATE = state.abb[match(as.character(STATE), state.name)],
fillKey = cut(Crime, quantile(Crime, seq(0, 1, 1/5)), labels = LETTERS[1:5]))
datm2 <- transform(datm,
STATE = state.abb[match(as.character(STATE), state.name)],
fillKey = cut(IDNUMR, quantile(IDNUMR, seq(0, 1, 1/5)), labels = LETTERS[1:5]))
head(dat)
datm2
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
dat2=read.csv('DataonChildhealth/totalbystate2.csv')
dat2$Year=2001
dat2<-dat2[c('Year','STATE', 'IDNUMR')]
dat2
datm3 <- transform(dat2,
STATE = state.abb[match(as.character(STATE), state.name)],
fillKey = cut(IDNUMR, quantile(IDNUMR, seq(0, 1, 1/5)), labels = LETTERS[1:5]))
head(datm3)
datm4=rbind(datm3, datm2)
head(datm4)
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
head(datm3)
datm3$IDNUMR=650
head(datm3)
datm4=rbind(datm3, datm2)
head(datm4)
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 2,
animate = 'Year'
)
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 2,
animate = 'Year'
)
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 3,
animate = 'Year'
)
map
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 2,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 2,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 2,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 2,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 2,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 2,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 2,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 2,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 2,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 2,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 2,
animate = 'Year'
)
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 2,
animate = 'Year'
)
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm4[,1:3],
pal = 'PuRd',
ncuts = 2,
animate = 'Year'
)
source('ichoropleth2.R')
source('ichorpleth.R')
source('ichoropleth.R')
dat=read.csv('DataonChildhealth/totalbystate2.csv')
dat$Year=2006
dat<-dat[c('Year','STATE', 'IDNUMR')]
datm2 <- transform(datm,
State = state.abb[match(as.character(State), state.name)],
fillKey = cut(Crime, quantile(Crime, seq(0, 1, 1/5)), labels = LETTERS[1:5])
)
datm2 <- transform(datm,
STATE = state.abb[match(as.character(STATE), state.name)],
fillKey = cut(IDNUMR, quantile(IDNUMR, seq(0, 1, 1/5)), labels = LETTERS[1:5])
)
ichoropleth(Crime ~ State,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
ichoropleth(IDNUMR ~ state.abb,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
library(plyr); library(rMaps)
source('ichoropleth.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
library("rjson", lib.loc="/usr/local/lib/R/3.2/site-library")
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
detach("package:rjson", unload=TRUE)
library("rjson", lib.loc="/usr/local/lib/R/3.2/site-library")
library("rCharts", lib.loc="/usr/local/lib/R/3.2/site-library")
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
head(datm2)
datm2$Cond='AUTISM'
head(datm2)
source('ichoropleth2')
source('ichoropleth2.R')
ichoropleth(IDNUMR ~ STATE,
data = datm2[,1:3],
pal = 'PuRd',
ncuts = 5,
animate = 'Year'
)
shiny::runApp('DataonChildhealth/2006ChildSpecialHealthCareNeeds/CH-app2')
runApp('DataonChildhealth/2006ChildSpecialHealthCareNeeds/CH-app2')
runApp('DataonChildhealth/2006ChildSpecialHealthCareNeeds/CH-app2')
runApp('DataonChildhealth/2006ChildSpecialHealthCareNeeds/CH-app2')
runApp('DataonChildhealth/2006ChildSpecialHealthCareNeeds/CH-app2')
dis<-read.csv('DataonChildhealth/2006ChildSpecialHealthCareNeeds/CH-app2/data/2006_dissat.csv')
head(dis)
dis$X<-NULL
head(dis)
dis<-read.csv('DataonChildhealth/2006ChildSpecialHealthCareNeeds/CH-app2/data/2006_dissat.csv')
head(dis)
runApp('DataonChildhealth/2006ChildSpecialHealthCareNeeds/CH-app2')
shiny::runApp()
runApp()
runApp()
runApp()
head(dis)
filter(dis, NAME=="Alaska")
runApp()
install.packages("nvd3")
require(devtools)
install_github('rNVD3', 'ramnathv')
install_github('ramnathv/rNVD3')
library(rNVD3)
runApp()
runApp()
runApp()
disdat<-read.csv("data/2006_dissat.csv")
head(disdat)
disdat[,Percent]
disdat$Percent
runApp()
barplot(height=disdat$Percent, names.arg=disdat$NAME)
runApp()
runApp()
runApp()
runApp()
runApp()
barplot(setNames(disdat[,2],disdat[,1])
)
barplot(setNames(disdat[,2],disdat[,1]))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rNVD3)
bar1 <- nvd3Plot(~disdat$NAME, data = disdat$Percent, type = "discreteBarChart", width = 600)
bar1$printChart("chart1")
bar1
nvd3Plot(~disdat$NAME, data = disdat$Percent, type = "discreteBarChart", width = 600)
bar1 <- nvd3Plot(~gear, data = mtcars, type = "discreteBarChart", width = 600)
bar1$printChart("chart1")
runApp()
runApp()
runApp()
runApp()
runApp('DataonChildhealth/2006ChildSpecialHealthCareNeeds/CH-app2')
getwd()
runApp("CH-app2")
shiny::runApp()
shiny::runApp()
h1
